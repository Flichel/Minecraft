name: CI/CD Docker y Test Minecraft

on:
  push:
    branches:
      - main

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    # 1. Descarga el repositorio     
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Instala Python
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    # 3. Instala dependencias de Python (si hay archivo requirements.txt) y coverage
    - name: Install Python dependencies and coverage
      run: |
        pip install -r requirements.txt || echo "No requirements.txt found"
        pip install coverage

    # 4. Inicia el servidor Minecraft en segundo plano
    - name: Start Minecraft container
      run: |
        docker compose up -d
        echo "Esperando 90 segundos para que arranque el servidor..."
        sleep 90

    # 5. Ejecuta pruebas con coverage desde la carpeta tests/
    - name: Run tests with coverage
      env:
        MC_HOST: localhost
        MC_PORT: 25565
      run: |
        coverage run -m unittest discover tests

    # 6. Muestra reporte de cobertura en consola y genera reporte HTML
    - name: Show coverage report
      run: |
        coverage report -m
        coverage html

    # 7. Sube reporte de cobertura como artefacto
    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/

    # 8. Muestra logs si falla alguna prueba
    - name: Show logs (debug)
      if: failure()
      run: |
        docker compose logs minecraft

    # 9. Detiene los contenedores siempre
    - name: Stop containers
      if: always()
      run: docker compose down

    # 10. Inicia sesión en Docker Hub (asegúrate de definir tus secrets)
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 11. Construye la imagen Docker
    - name: Build Docker image
      run: |
        docker build -t tu_usuario/docker-ci-example:latest .

    # 12. Empuja la imagen a Docker Hub
    - name: Push Docker image
      run: |
        docker push tu_usuario/docker-ci-example:latest
